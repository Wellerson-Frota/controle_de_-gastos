
# Criado por https://www.toptal.com/developers/gitignore/api/python,django,linux,pycharm
# Edite em https://www.toptal.com/developers/gitignore?templates=python,django,linux,pycharm

### Django ###
*.registro
*.Panela
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal
meios de comunicação

# Se o seu processo de compilação inclui a execução de collectstatic, você provavelmente não precisa ou deseja incluir staticfiles/
# em seu repositório Git. Atualize e descomente a linha a seguir de acordo.
# <django-project-name>/staticfiles/

### Pilha Django.Python ###
# Arquivos compilados por byte / otimizados / DLL
*.py[cod]
*$py.class

# Extensões C
*.assim

# Distribuição/embalagem
.Pitão
Construir/
desenvolver-ovos/
dist./
Transferências/
ovos/
.ovos/
lib/
lib64/
peças/
sdist/
var/
rodas/
share/python-wheels/
*.egg-info/
.instalado.cfg
*.ovo
MANIFESTO

# PyInstaller
# Normalmente esses arquivos são escritos por um script python de um template
# antes que o PyInstaller construa o exe, para injetar data/outras informações nele.
*.manifesto
*.spec

# Logs do instalador
pip-log.txt
pip-delete-this-directory.txt

# Teste de unidade / relatórios de cobertura
htmlcov/
.tox/
.nox/
.cobertura
.cobertura.*
.cache
nariztests.xml
cobertura.xml
*.cobrir
*.py,capa
.hipótese/
.pytest_cache/
cobrir/

# Traduções
*.mo

# Coisas do Django:

# Material do frasco:
instância/
.webassets-cache

# Coisas de scrap:
.scrapy

# Documentação da esfinge
docs/_build/

#PyBuilder
.pybuilder/
alvo/

# Notebook Jupyter
.ipynb_checkpoints

#IPython
profile_default/
ipython_config.py

#pyenv
# Para uma biblioteca ou pacote, você pode querer ignorar esses arquivos, pois o código é
# destinado a ser executado em vários ambientes; caso contrário, verifique-os em:
# .python-version

# pipenv
# De acordo com pypa/pipenv#598, é recomendado incluir Pipfile.lock no controle de versão.
# No entanto, em caso de colaboração, se houver dependências ou dependências específicas da plataforma
# sem suporte multiplataforma, o pipenv pode instalar dependências que não funcionam ou não
# instala todas as dependências necessárias.
#Pipfile.lock

#poesia
# Semelhante ao Pipfile.lock, geralmente é recomendado incluir poesia.lock no controle de versão.
# Isto é especialmente recomendado para pacotes binários para garantir a reprodutibilidade, e é mais
# comumente ignorado para bibliotecas.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poesia.lock

# PEP 582; usado por exemplo github.com/David-OConnor/pyflow
__pypackages__/

#Coisas de aipo
aipo-schedule
aipo.pid

# Arquivos analisados ​​pelo SageMath
*.sage.py

# Ambientes
.env
.venv
ambiente/
venv/
ENV/
env.bak/
venv.bak/

# Configurações do projeto Spyder
.spyderproject
.spyproject

# Configurações do projeto de corda
.ropeproject

# documentação do mkdocs
/local

#mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Verificador de tipo Pyre
.pyre/

# pytype analisador de tipo estático
.pytype/

# Símbolos de depuração do Cython
cython_debug/

#PyCharm
# O modelo específico do JetBrains é mantido em um JetBrains.gitignore separado que pode
# pode ser encontrado em https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# e pode ser adicionado ao gitignore global ou mesclado neste arquivo. Por uma energia mais nuclear
# opção (não recomendado) você pode descomentar o seguinte para ignorar toda a pasta de ideias.
#.idéia/

###Linux ###
*~

# arquivos temporários que podem ser criados se um processo ainda tiver um handle aberto de um arquivo deletado
.fuse_hidden*

# Preferências do diretório KDE
.diretório

# Pasta de lixo do Linux que pode aparecer em qualquer partição ou disco
.Lixo-*

# Os arquivos .nfs são criados quando um arquivo aberto é removido, mas ainda está sendo acessado
.nfs*

### PyCharm ###
# Abrange IDEs JetBrains: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm e Rider
# Referência: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# Coisas específicas do usuário
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dicionários
.idea/**/prateleira

# Específico do usuário da AWS
.idea/**/aws.xml

# Arquivos gerados
.idea/**/contentModel.xml

# Arquivos sensíveis ou de alta rotatividade
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Grade
.idea/**/gradle.xml
.idea/**/libraries

# Gradle e Maven com importação automática
# Ao usar Gradle ou Maven com importação automática, você deve excluir arquivos de módulo,
# já que eles serão recriados e podem causar churn. Descomente se estiver usando
# importação automática.
# .ideia/artefatos
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

#CMake
cmake-build-*/

# Plugin Mongo Explorer
.idea/**/mongoSettings.xml

# Formato de projeto baseado em arquivo
*.iws

#IntelliJ
Fora/

# plugin mpeltonen/sbt-idea
.idea_modules/

# plugin JIRA
atlassian-ide-plugin.xml

# Plugin Cursive Clojure
.idea/replstate.xml

# Plugin SonarLint
.idea/sonarlint/

# Plugin Crashlytics (para Android Studio e IntelliJ)
com_crashlytics_export_strings.xml
propriedades do crashlytics
crashlytics-build.properties
tecido.propriedades

# Cliente Rest baseado em Editor
.idea/httpRequests

# Arquivo de cache serializado do Android studio 3.1+
.idea/caches/build_file_checksums.ser

### Patch do PyCharm ###
# Motivo do comentário: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

# *.iml
#modulos.xml
# .idea/misc.xml
# *.ipr

# Plugin Sonarlint
# https://plugins.jetbrains.com/plugin/7973-sonarlint
.idea/**/sonarlint/

# Plugin SonarQube
# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin
.idea/**/sonarIssues.xml

# Plugin Navegador de Markdown
# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced
.idea/**/markdown-navigator.xml
.idea/**/markdown-navigator-enh.xml
.idea/**/markdown-navigator/

# Erro de criação de arquivo de cache
# Veja https://youtrack.jetbrains.com/issue/JBR-2257
.idea/$CACHE_FILE$

# Plugin CodeStream
# https://plugins.jetbrains.com/plugin/12206-codestream
.idea/codestream.xml

### Pitão ###
# Arquivos compilados por byte / otimizados / DLL

# Extensões C

# Distribuição/embalagem

# PyInstaller
# Normalmente esses arquivos são escritos por um script python de um template
# antes que o PyInstaller construa o exe, para injetar data/outras informações nele.

# Logs do instalador

# Teste de unidade / relatórios de cobertura

# Traduções

# Coisas do Django:

# Material do frasco:

# Coisas de scrap:

# Documentação da esfinge

#PyBuilder

# Notebook Jupyter

#IPython

#pyenv
# Para uma biblioteca ou pacote, você pode querer ignorar esses arquivos, pois o código é
# destinado a ser executado em vários ambientes; caso contrário, verifique-os em:
# .python-version

# pipenv
# De acordo com pypa/pipenv#598, é recomendado incluir Pipfile.lock no controle de versão.
# No entanto, em caso de colaboração, se houver dependências ou dependências específicas da plataforma
# sem suporte multiplataforma, o pipenv pode instalar dependências que não funcionam ou não
# instala todas as dependências necessárias.

#poesia
# Semelhante ao Pipfile.lock, geralmente é recomendado incluir poesia.lock no controle de versão.
# Isto é especialmente recomendado para pacotes binários para garantir a reprodutibilidade, e é mais
# comumente ignorado para bibliotecas.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control

# PEP 582; usado por exemplo github.com/David-OConnor/pyflow

#Coisas de aipo

# Arquivos analisados ​​pelo SageMath

# Ambientes

# Configurações do projeto Spyder

# Configurações do projeto de corda

# documentação do mkdocs

#mypy

# Verificador de tipo Pyre

# pytype analisador de tipo estático

# Símbolos de depuração do Cython

#PyCharm
# O modelo específico do JetBrains é mantido em um JetBrains.gitignore separado que pode
# pode ser encontrado em https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# e pode ser adicionado ao gitignore global ou mesclado neste arquivo. Por uma energia mais nuclear
# opção (não recomendado) você pode descomentar o seguinte para ignorar toda a pasta de ideias.

# Fim de https://www.toptal.com/developers/gitignore/api/python,django,linux,pycharm
